#!/usr/bin/perl
#
# CompaSSH - OpenSSH Helper for VPN-like services
# Copyright (C) 2012-2013  Tx0 <tx0@strumentiresistenti.org>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#

### -------- Do NOT change anything under this line -------

use strict;
use warnings;

my $requested_vpn = $ARGV[1] || "";

our %VPN;

do "$ENV{HOME}/.compassh.conf";
do "/usr/libexec/compassh/compassh.utils";

my $argv0 = (defined $ARGV[0]) ? lc($ARGV[0]) : "show";

if ($argv0 !~ /^start|restart|stop|show|list|config|help|hosts$/) {
	print STDERR "Unknown command: $argv0\n";
	exit 1;
}

if ($argv0 =~ /help/) {
	print qq(
  CompaSSH, the SSH VPN without the VPN.

    $0 [show|list]
      Show CompaSSH status and active VPNs

    $0 [start|stop|restart <VPN>]
      Manages declared VPNs
 
    $0 [config <VPN>]
      Show a VPN config file

    $0 [hosts [add|remove <host> <IP addr>]]
      Show and manage internal hostname resolution map

  More information at http://strumentiresistenti.org/en/Compassh-introduction

);
	exit 0;
}

if ($argv0 =~ /hosts/) {
	print qq(\n  Still to be implemented!\n\n);
	exit 1;
}

if ($argv0 =~ /list|show/) {
	print "\n";
	print "   VPN name               SSH connection                   Port  PID\n";
	print "-----------------------------------------------------------------------\n";
}

for my $vpn (sort keys %VPN) {
	if ($argv0 =~ /stop|restart/) {
		next if (($requested_vpn ne "") and ($requested_vpn ne $vpn));
		stop_vpn($vpn);
	}

	if ($argv0 =~ /restart/) {
		sleep 2;
	}

	if ($argv0 =~ /start|restart/) {
		next if (($requested_vpn ne "") and ($requested_vpn ne $vpn));
		start_vpn($vpn);
	}
	
	if ($argv0 =~ /show|list/) {
		show_running_vpn($vpn);
	}
}

if ($argv0 =~ /config/) {
	unless (defined $requested_vpn and $requested_vpn) {
		print STDERR "No VPN provided after config\n";
		exit 1;
	}

	my $vpn_config = $ENV{HOME} . "/.ssh/config.$requested_vpn";

	unless (-f $vpn_config) {
		print STDERR "VPN $requested_vpn have no config file\n";
		exit 1;
	}

	my $subcommand = $ARGV[2] || "show";
	if ($subcommand =~ /show|list|print/) {
		if (open(IN, $vpn_config)) {
			while (<IN>) { print $_; }
			close IN;
		} else {
			print STDERR "Unable to open $vpn_config\n";
		}
	}
}

if ($argv0 !~ /restart|start|stop/) {
	print "\n";
}

__END__

=pod

=head1 NAME

compassh - CompaSSH control command

=head1 SYNOPSYS

compassh [list|start|stop <VPN>]

=head1 DESCRIPTION

CompaSSH enables OpenSSH to connect to a host inside a private network
using a publicly reachable OpenSSH gateway. CompaSSH manages port forwarding and
SOCKS proxying. CompaSSH does some name resolution too to make private names valid
outside of private networks.

=head1 OPTIONS

start <VPN>
	start the vpn named VPN

stop <VPN>
	stop the vpn named VPN

list
	list all the VPNs. This is the default action

config <VPN> show
	display VPN config file

=head1 EXAMPLE

$ compassh list

    VPN name               SSH connection                   Port  PID
 -----------------------------------------------------------------------
  + strumentiresistenti    gw@vpn.strumentiresistenti.org   1200  6264 
    bigcompany             root@gateway.bigcompany.com      1101  -

$ compassh start bigcompany

$ compassh stop bigcompany

=head1 FILES

~/.compassh.conf
	Your CompaSSH configuration

=head1 SEE ALSO

compassh_proxy(1), compassh.conf(5)

=head1 AUTHOR

Tx0 <tx0@strumentiresistenti.org>
