verbose: False

#
# The VPN section declares the VPNs available. Each VPN must be provided
# with a proxy, which is an SSH destination in the form:
#   user_name@hostname[:port]
# The user_name is supposed to be able to authenticate on the remote host
# by public key and the public key must be activated with ssh-add before
# trying to connect to the remote host.
#
# Each VPN has also a paired local port. Local ports must be unique among
# all defined VPNs and are used to identify running VPNs too. Local ports
# accept SOCKS connections and CompaSSH will use them to route trafic.
# Last but not least, local ports can be used as well by any SOCKS enabled
# application, like web browsers, to forward connections through a VPN.
#
VPN:
  home:
    proxy: 'root@ganimede.dontexist.net'
    local_port: 1090
  calvinhobbes:
    proxy: 'calvin@hobbes.org'
    local_port: 1082
  bigcorp:
    proxy: 'jdoe@bigcorp.com'
    local_port: 1083

#
# When CompaSSH is used as a proxy to establish connections, it uses the
# patterns provided in this section to match the destination to a declared
# VPN. If the regular expression described as key matches the destination
# (i.e. ^.*somedomain.com$ matches www3.somedomain.com), than the corresponding
# VPN on the right is choosen.
#
# Several patterns can point to the same VPN. This just means that several
# destinations can be reached through the same VPN. In this example, two
# patterns point to the calvinhobbes VPN, while a third one points through
# bigcorp VPN.
#
patterns:
  ^mail-customer: calvinhobbes
  ^customer.*$: calvinhobbes
  ^jdoe-desktop$: bigcorp

#
# hosts is just an /etc/hosts equivalent. Basically this section maps a bunch
# of hostnames to their corresponding IP addresses. This is particularly
# useful to connect to remote hosts which are on a private network, which
# means that our local machine will not be able to resolve their addresses
# on this side, failing to establish the connection. If a destination is
# not listed in this section, CompaSSH will anyway try to resolve the
# hostname using the regular resolver library, but without any guarantee
# of success.
#
hosts:
  jdoe-desktop: 192.168.21.1
  customer-mail: 172.20.107.32
